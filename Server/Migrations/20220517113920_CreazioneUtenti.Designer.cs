// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgettoIDS.Data;

#nullable disable

namespace ProgettoIDS.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220517113920_CreazioneUtenti")]
    partial class CreazioneUtenti
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Models.Ordine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("TEXT");

                    b.Property<double>("Totale")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Ordini");
                });

            modelBuilder.Entity("Models.OrdineProdotto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdOrdine")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProdotto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantità")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Totale")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("IdOrdine");

                    b.HasIndex("IdProdotto");

                    b.ToTable("OrdineProdotto");
                });

            modelBuilder.Entity("Models.Prodotto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<double>("Prezzo")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantita")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Prodotti");
                });

            modelBuilder.Entity("Models.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("Models.OrdineProdotto", b =>
                {
                    b.HasOne("Models.Ordine", "Ordine")
                        .WithMany("OrdineProdotto")
                        .HasForeignKey("IdOrdine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Prodotto", "Prodotto")
                        .WithMany()
                        .HasForeignKey("IdProdotto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordine");

                    b.Navigation("Prodotto");
                });

            modelBuilder.Entity("Models.Ordine", b =>
                {
                    b.Navigation("OrdineProdotto");
                });
#pragma warning restore 612, 618
        }
    }
}
